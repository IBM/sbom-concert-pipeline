apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: cert-sbom
spec:
  params:
    - name: app_url
    - name: app_port
    - name: component_name
    - name: app_endpoint_exposure
    - name: business_email
    - name: env_target
  results:
    - name: output
  workspaces: 
    - name: output
      mountPath: /toolkit-data/
  steps:
    - name: cert-sbom
      image: icr.io/cpopen/ibm-concert-toolkit:v1.0.4
      env:
        - name: APP_URL
          value: $(params.app_url)
        - name: APP_PORT
          value: $(params.app_port)
        - name: COMPONENT_NAME
          value: $(params.component_name)
        - name: BUSINESS_EMAIL
          value: $(params.business_email)
        - name: ENV_TARGET
          value: $(params.env_target)
        - name: APP_ENDPOINT_EXPOSURE
          value: $(params.app_endpoint_exposure)
      script: |
        #!/bin/sh
        set -x
        [ -z "$DATA_OUT_PATH" ] && DATA_OUT_PATH="/toolkit-data"

        CERT_FILE=${DATA_OUT_PATH}/certificate.crt
        OUTPUT_FILE=certificate.json
        
        echo | openssl s_client -showcerts -connect ${APP_URL}:${APP_PORT} 2>/dev/null|sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > ${CERT_FILE}

        #SERIAL_NUMBER=$(openssl x509 -in ${CERT_FILE} -noout -serial|awk -Fserial= '{print $2}')
        SERIAL_NUMBER=635F8C394CFC24286F948D6F1B9EA326B661B650
        SUBJECT=$(openssl x509 -in ${CERT_FILE} -noout -subject|awk -Fsubject= '{print $2}')
        ISSUER=$(openssl x509 -in ${CERT_FILE} -noout -issuer|awk -Fissuer= '{print $2}')
        _START_DATE=$(openssl x509 -in ${CERT_FILE} -noout -startdate|awk -FnotBefore= '{print $2}')
        _END_DATE=$(openssl x509 -in ${CERT_FILE} -noout -enddate|awk -FnotAfter= '{print $2}')
        START_DATE="$(date -u -d "$_START_DATE" "+%F %T") +0000 UTC"
        #END_DATE="$(date -u -d "$_END_DATE" "+%F %T") +0000 UTC"
        END_DATE="2024-09-20 21:44:30 +0000 UTC"
        CERT_TYPE=der
        CERT_OWNER=$(openssl x509 -in ${CERT_FILE} -noout -email|awk -Femail= '{print $2}')
        DNS_NAMES=$(openssl x509 -in ${CERT_FILE} -noout -ext subjectAltName|tail -1|awk -F, '{print $1}'|awk -F: '{print $2}')
        IS_PUBLIC="true"
        if [[ "${APP_ENDPOINT_EXPOSURE}x" == "privatex" ]]; then
          IS_PUBLIC="false"
        fi

        cat << EOF | envsubst > /toolkit-data/cert-config.yaml
        concert:
          output_file: "${OUTPUT_FILE}"
          certificate_url:
          certificates:
          - serial_number: "${SERIAL_NUMBER}"
            properties:
              subject: "${SUBJECT}"
              issuer: "${ISSUER}"
              validity_start_date: "${START_DATE}"
              validity_end_date: "${END_DATE}"
              certificate_type: "${CERT_TYPE}"
              owner: "${CERT_OWNER:-$BUSINESS_EMAIL}"
              dns_names: '${DNS_NAMES}'
            access_points:
            - name: appapi:${COMPONENT_NAME}
              is_public: "true"
              url: "https://${APP_URL}/${COMPONENT_NAME}"
            environment_targets:
            - name: "${ENV_TARGET}"
        EOF
        cert-sbom --cert-config /toolkit-data/cert-config.yaml
        echo -n /toolkit-data/certificate.json | tee $(results.output.path)
